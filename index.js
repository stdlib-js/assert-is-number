// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,t=function(){try{return e({},"x",{}),!0}catch(e){return!1}},r=Object.defineProperty,o=Object.prototype,n=o.toString,l=o.__defineGetter__,i=o.__defineSetter__,u=o.__lookupGetter__,c=o.__lookupSetter__,a=r,f=function(e,t,r){var a,f,p,y;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((f="value"in r)&&(u.call(e,t)||c.call(e,t)?(a=e.__proto__,e.__proto__=o,delete e[t],e[t]=r.value,e.__proto__=a):e[t]=r.value),p="get"in r,y="set"in r,f&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&l&&l.call(e,t,r.get),y&&i&&i.call(e,t,r.set),e},p=t()?a:f,y=function(e,t,r){p(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})};function b(e){return"number"==typeof e}var _="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),s=function(){return _&&"symbol"==typeof Symbol.toStringTag},d=Object.prototype.toString,m=d,g=function(e){return m.call(e)},j=Object.prototype.hasOwnProperty,v=function(e,t){return null!=e&&j.call(e,t)},S="function"==typeof Symbol?Symbol.toStringTag:"",h=v,w=S,O=d,P=g,T=function(e){var t,r,o;if(null==e)return O.call(e);r=e[w],t=h(e,w);try{e[w]=void 0}catch(t){return O.call(e)}return o=O.call(e),t?e[w]=r:delete e[w],o},x=s()?T:P,E=Number,N=E.prototype.toString,k=s();function A(e){return"object"==typeof e&&(e instanceof E||(k?function(e){try{return N.call(e),!0}catch(e){return!1}}(e):"[object Number]"===x(e)))}function G(e){return b(e)||A(e)}return y(G,"isPrimitive",b),y(G,"isObject",A),G},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).isNumber=t();
//# sourceMappingURL=index.js.map
